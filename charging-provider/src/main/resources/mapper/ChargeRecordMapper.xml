<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyt.charging.provider.mapper.ChargeRecordMapper">
  <resultMap id="BaseResultMap" type="com.zyt.charging.provider.entity.domain.ChargeRecordDO">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="charge_info_id" jdbcType="INTEGER" property="chargeInfoId"/>
    <result column="user_info_id" jdbcType="INTEGER" property="userInfoId"/>
    <result column="charge_time" jdbcType="INTEGER" property="chargeTime"/>
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
    <result column="power_used" jdbcType="INTEGER" property="powerUsed"/>
    <result column="price_type" jdbcType="INTEGER" property="priceType"/>
    <result column="cost" jdbcType="INTEGER" property="cost"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <insert id="insertChargeRecord" useGeneratedKeys="true" keyProperty="id" parameterType="com.zyt.charging.provider.entity.domain.ChargeRecordDO">
    INSERT INTO charging.charge_record (
    charge_info_id,
    user_info_id,
    charge_time,
    start_time,
    end_time,
    power_used,
    price_type,
    cost,
    create_time,
    update_time
    )
    VALUES (
    #{chargeInfoId},
    #{userInfoId},
    #{chargeTime},
    #{startTime},
    #{endTime},
    #{powerUsed},
    #{priceType},
    #{cost},
    now(), now()
    )
  </insert>

  <update id="updateChargeRecord" parameterType="com.zyt.charging.provider.entity.domain.ChargeRecordDO">
    update charging.charge_record
    <set>
      <if test="chargeTime != null ">
        charge_time = #{chargeTime},
      </if>
      <if test="endTime != null">
        end_time = #{endTime},
      </if>
      <if test="powerUsed != null">
        power_used = #{powerUsed},
      </if>
      <if test="priceType != null">
        price_type = #{priceType},
      </if>
      <if test="cost != null">
        cost = #{cost},
      </if>
      update_time = now()
    </set>
    where id = #{id}
  </update>

  <select id="countChargeRecord" resultType="java.lang.Integer">
    select COUNT(*) FROM
      charging.charge_record
    <where>
      <if test="startTime != null">
        and start_time > #{startTime}
      </if>
      <if test="endTime != null">
        and #{endTime} > end_time
      </if>
    </where>
  </select>

  <select id="selectRecordByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select * from
    charging.charge_record
    where user_info_id = #{userId}
  </select>

  <select id="selectRecordById" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select * from
    charging.charge_record
    where id = #{id}
  </select>

  <select id="selectRecordByChargeInfoId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select * from
    charging.charge_record
    where charge_info_id = #{chargeInfoId}
  </select>

  <select id="countChargeRecordByUser" resultType="java.lang.Integer">
    select COUNT(*) FROM
    charging.charge_record
    where charge_info_id = #{chargeInfoId}
    group by user_info_id
  </select>

</mapper>